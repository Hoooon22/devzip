# nginx 설정 파일 - 502 에러 시 점검 페이지 표시
# /etc/nginx/sites-available/your-site 또는 /etc/nginx/nginx.conf에 추가

server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;  # 실제 도메인으로 변경
    
    # 로그 설정
    access_log /var/log/nginx/traceboard_access.log;
    error_log /var/log/nginx/traceboard_error.log;
    
    # 정적 파일 캐싱 설정
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 메인 애플리케이션 프록시
    location / {
        # 백엔드 서버로 프록시
        proxy_pass http://localhost:8080;  # Spring Boot 서버 포트
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 타임아웃 설정
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 502, 503, 504 에러 시 점검 페이지로 리다이렉트
        error_page 502 503 504 /maintenance.html;
        
        # 연결 실패 시에도 점검 페이지 표시
        proxy_intercept_errors on;
    }
    
    # 점검 페이지 서빙
    location = /maintenance.html {
        root /var/www/html;  # maintenance.html 파일이 위치한 경로
        internal;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # 헬스체크 엔드포인트 (선택사항)
    location /health {
        proxy_pass http://localhost:8080/actuator/health;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # 보안 헤더 추가
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
}

# HTTPS 설정 (SSL 인증서가 있는 경우)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;  # 실제 도메인으로 변경
    
    # SSL 인증서 설정 (Let's Encrypt 예시)
    # ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS 헤더
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 위의 HTTP 설정과 동일한 location 블록들을 여기에 복사
    location / {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        error_page 502 503 504 /maintenance.html;
        proxy_intercept_errors on;
    }
    
    location = /maintenance.html {
        root /var/www/html;
        internal;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
}

# HTTP to HTTPS 리다이렉트 (HTTPS를 사용하는 경우)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# }