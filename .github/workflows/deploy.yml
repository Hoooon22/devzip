name: Deploy to Production

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      env:
        CI: false
      run: ./gradlew build -x test

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        port: 3323
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        debug: true
        script: |
          cd ~/project/devzip
          # Git 설정 및 최신 코드 가져오기
          git config pull.rebase false
          git pull origin master
          
          # Docker 작업 실행
          if [ $? -eq 0 ]; then
            docker compose down
            docker compose build
            docker compose up -d
          else
            echo "Git pull failed. Deployment stopped."
            exit 1
          fi
