name: dev branch auto ci process script

on:
  push:
    branches: [ master ]

jobs:
  checkout:
    name: 📝 Checkout Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

  stop_services:
    name: 🛑 Stop Existing Services
    runs-on: ubuntu-latest
    needs: checkout  # checkout job 완료 후 실행

    steps:
      - name: Connect & Stop Services
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            echo "🔗 Navigating to project directory"
            cd /var/project/devzip/
            echo "🛑 Stopping running services"
            ./gradlew --stop
            fuser -k 8080/tcp || echo "⚠️ No process running on port 8080"
            pm2 stop all || echo "⚠️ No PM2 processes running"
            pm2 delete all || echo "⚠️ No PM2 processes to delete"
            echo "✅ Services stopped"

  build:
    name: 🏗️ Clean & Build Project
    runs-on: ubuntu-latest
    needs: stop_services  # stop_services 완료 후 실행

    steps:
      - name: Connect & Build Project
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            echo "🧹 Cleaning previous build"
            cd /var/project/devzip/
            sudo rm -rf build/
            sudo yum clean all
            echo "📥 Pulling latest code"
            git pull origin master || { echo "❌ Git pull failed"; exit 1; }
            echo "🏗️ Building project"
            ./gradlew clean build --no-daemon --parallel --configure-on-demand || { echo "❌ Build failed"; exit 1; }
            echo "✅ Build completed"

  deploy:
    name: 🚀 Deploy & Restart Services
    runs-on: ubuntu-latest
    needs: build  # build 완료 후 실행

    steps:
      - name: Restart PM2 services
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            echo "🚀 Deploying application"
            cd /var/project/devzip/
            
            # 스크립트 실행 권한 부여
            chmod +x src/main/resources/update_trends.sh
            
            # 로그 디렉토리 생성
            mkdir -p logs
            
            # 서버 시작 시 바로 트렌드 데이터 업데이트 수행
            echo "🔄 Initial trend data update"
            src/main/resources/update_trends.sh >> logs/trend_update.log 2>&1 || echo "⚠️ Trend data update failed but continuing"
            
            # 서버 시작
            echo "🚀 Starting main server"
            pm2 start server.json || { echo "❌ Failed to start server"; exit 1; }
            
            # PM2로 2시간마다 트렌드 데이터 업데이트 스크립트 실행 설정
            echo "⏱️ Setting up scheduled trend updates"
            pm2 start --name "trend-updater" --cron "0 */2 * * *" src/main/resources/update_trends.sh || { echo "⚠️ Failed to schedule trend updates but continuing"; }
            
            # 가상 환경 설정 및 Python 패키지 설치
            echo "🐍 Setting up Python environment"
            python3 -m venv venv || echo "⚠️ Virtual environment creation failed but continuing"
            source venv/bin/activate
            pip install --no-cache-dir pytrends || echo "⚠️ Failed to install Python packages but continuing"
            deactivate
            
            # PM2 프로세스 목록 확인
            echo "📋 Current PM2 processes:"
            pm2 list
            
            echo "✅ Deployment and service restart completed"
            echo "🔗 서비스 URL: https://devzip.site"
