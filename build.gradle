plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.hoooon22'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.apache.tomcat.embed:tomcat-embed-core:10.1.25'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'com.h2database:h2'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.jsoup:jsoup:1.15.3' // 크롤링
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

repositories {
    mavenCentral()
    maven {url 'https://repo.spring.io/snapshot'} // 스냅샷 저장소 추가
}

tasks.named('test') {
    useJUnitPlatform()
}

// springboot + react 동시 빌드
def frontendDir = "$projectDir/src/main/frontend"

// React 빌드 작업
task installFrontendReact(type: Exec) {
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    commandLine "npm", "install"
}

task buildFrontendReact(type: Exec) {
    dependsOn "installFrontendReact"
    workingDir "$frontendDir"
    inputs.dir "$frontendDir"
    group = BasePlugin.BUILD_GROUP
    commandLine "npm", "run-script", "build"
}

task copyFrontendBuildFiles(type: Copy) {
    dependsOn "buildFrontendReact"
    from "$frontendDir/build"
    into "$projectDir/src/main/resources/static"
}

// 리소스 복사 작업
processResources {
    dependsOn "copyFrontendBuildFiles"
}

tasks.jar {
    exclude 'static/js/*.map'  // JS 소스맵 파일 제외
}
